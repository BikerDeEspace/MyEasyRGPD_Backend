pipeline {
    agent any

    stages {
        stage ('Initialisation') {
            steps {
                sh '''
                    echo "Debut du build"
                '''
            }
        }
        stage ('Test') {
            steps {
                sh "echo 'Test'"
            }
        }

        stage ('Analyse SonarQube') {
            environment {
                sonarqubeScannerHome = tool name: 'sonarqube-3.3', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh "${sonarqubeScannerHome}/bin/sonar-scanner" +
                        " -Dsonar.host.url=${SONAR_HOST_URL} " +
                        " -Dsonar.login=${SONAR_AUTH_TOKEN} " +
                        " -Dsonar.projectName=MyEasyRGPD_backend " +
                        " -Dsonar.projectVersion=${env.BUILD_NUMBER} " +
                        " -Dsonar.projectKey=RGPDB " +
                        " -Dsonar.sources=src/ " +
                        " -Dsonar.tests=tests/"
                }
            }
        }

        stage ("SonarQube Gatekeeper") {
            steps {
                script {
                    STAGE_NAME = "SonarQube Gatekeeper"

                    if (BRANCH_NAME == "develop") {
                        echo "In 'develop' branch, skip."
                    } else {
                        def qualitygate = waitForQualityGate()
                        if (qualitygate.status != "OK") {
                            error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
                        }
                    }
                }
            }
        }
    }
}